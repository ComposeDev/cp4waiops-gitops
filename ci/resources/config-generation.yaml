apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: config-generation
spec:
  params:
    - default: 'https://github.com/ComposeDev/cp4waiops-gitops.git'
      name: git_gitops_repo
      type: string
    - default: 'https://github.com/ComposeDev/cp4waiops-configuration.git'
      name: git_configuration_repo
      type: string
    - name: git_user_name
      type: string
    - name: git_user_email
      type: string
  tasks:
    - name: git-clone-configs
      params:
        - name: url
          value: $(params.git_configuration_repo)
        - name: revision
          value: main
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:af7dd5b3b1598a980f17d5f5d3d8a4b11ab4f5184677f7f17ad302baa36bd3c1
        - name: userHome
          value: /tekton/home
        - name: subdirectory
          value: configs
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: git
        - name: basic-auth
          workspace: basic-auth
    - name: git-clone-gitops
      params:
        - name: url
          value: $(params.git_gitops_repo)
        - name: revision
          value: main
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:af7dd5b3b1598a980f17d5f5d3d8a4b11ab4f5184677f7f17ad302baa36bd3c1
        - name: userHome
          value: /tekton/home
        - name: subdirectory
          value: gitops
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: git
        - name: basic-auth
          workspace: basic-auth
    - name: git-push-config-change
      params:
        - name: BASE_IMAGE
          value: >-
            #docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
            quay.io/ibmgaragecloud/alpine-git:v2.26.2
        - name: GIT_SCRIPT
          value: >
            cd gitops

            if [[ $(git status -uno --porcelain | wc -l) -eq 0 ]];  then 
                exit 0
            fi

            git add -u .

            git commit -m "Updated config map based on
            $(tasks.git-clone-configs.results.commit)"

            git push origin HEAD:main
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: $(params.git_user_name)
        - name: GIT_USER_EMAIL
          value: $(params.git_user_email)
      runAfter:
        - primary-validate-properties-file
        - primary-oc-noi-sql-exec
        - backup-validate-properties-file
        - backup-oc-noi-sql-exec
      taskRef:
        kind: ClusterTask
        name: git-cli
      workspaces:
        - name: source
          workspace: git
        - name: basic-auth
          workspace: basic-auth
    - name: primary-oc-noi-sql-exec
      params:
        - name: SCRIPT
          value: >
            oc exec evtmanager-ncoprimary-0 -- mkdir -p /home/netcool/tekton

            oc rsync --include=agg-p-sql-extensions --strategy=rsync
            $(workspaces.manifest-dir.path)/merged/
            evtmanager-ncoprimary-0:/home/netcool/tekton

            oc exec evtmanager-ncoprimary-0 -- bash -c
            '/opt/IBM/tivoli/netcool/omnibus/bin/nco_sql -server AGG_P -user
            root -password $OMNIBUS_ROOT_PWD <
            /home/netcool/tekton/agg-p-sql-extensions'
        - name: VERSION
          value: latest
      runAfter:
        - primary-merge-files-into-manifest
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: git
    - name: primary-merge-files-into-manifest
      params:
        - name: pathfiles
          value: configs/primary/data
        - name: pathmanifest
          value: gitops/config/resources/evtmanager-objserv-agg-primary-config.yaml
        - name: yq-version
          value: 4.24.5
      runAfter:
        - git-clone-configs
        - git-clone-gitops
      taskRef:
        kind: Task
        name: merge-files-into-manifest
      workspaces:
        - name: inputoutput
          workspace: git
    - name: oc-nci-check-syntax-policies
      params:
        - name: SCRIPT
          value: |
            cat <<'EOF' > $(workspaces.manifest-dir.path)/configs/nci/policies/syntaxcheck.sh
            #!/usr/bin/bash -e
            for file in /home/netcool/tekton/*.ipl
            do
              echo "Processing ${file}"
              /opt/IBM/tivoli/impact/bin/nci_policy NCI_0 syntax $file > /home/netcool/tekton/output.txt
              cat /home/netcool/tekton/output.txt
              errorcount=$(cat /home/netcool/tekton/output.txt | sed -n "/ERROR/p" | wc -l)
              test $errorcount = 0
            done
            EOF
            chmod +x $(workspaces.manifest-dir.path)/configs/nci/policies/syntaxcheck.sh
            oc exec -c nciserver evtmanager-nciserver-0 -- mkdir -p /home/netcool/tekton
            oc rsync -c nciserver --strategy=tar $(workspaces.manifest-dir.path)/configs/nci/policies/ evtmanager-nciserver-0:/home/netcool/tekton
            oc exec -c nciserver evtmanager-nciserver-0 -- /home/netcool/tekton/syntaxcheck.sh
        - name: VERSION
          value: latest
      runAfter:
        - git-clone-configs
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: git
    - name: oc-nci-update-policies
      params:
        - name: SCRIPT
          value: |
            cat <<'EOF' > $(workspaces.manifest-dir.path)/configs/nci/policies/updatepolicies.sh
            #!/usr/bin/bash -e
            for file in /home/netcool/tekton/*.ipl
            do
              echo "Processing ${file}"
              /opt/IBM/tivoli/impact/bin/nci_policy NCI_0 push impactadmin $IMPACT_ADMIN_PASSWORD $file
            done
            EOF
            chmod +x $(workspaces.manifest-dir.path)/configs/nci/policies/updatepolicies.sh
            oc exec -c nciserver evtmanager-nciserver-0 -- mkdir -p /home/netcool/tekton
            oc rsync -c nciserver --strategy=tar $(workspaces.manifest-dir.path)/configs/nci/policies/ evtmanager-nciserver-0:/home/netcool/tekton
            oc exec -c nciserver evtmanager-nciserver-0 -- /home/netcool/tekton/updatepolicies.sh
        - name: VERSION
          value: latest
      runAfter:
        - oc-nci-check-syntax-policies
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: git
    - name: primary-validate-properties-file
      params:
        - name: SCRIPT
          value: |-
            #!/bin/bash
            while IFS= read -r line
            do
              echo "$line" | grep -q ":"  
              if [[ $? -eq 1 ]]
              then 
                echo "Missing colon on line \"$line\""
                exit 1
              fi
            done < "$(workspaces.manifest-dir.path)/merged/agg-p-props-append"
        - name: VERSION
          value: latest
      runAfter:
        - primary-merge-files-into-manifest
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: git
    - name: backup-merge-files-into-manifest
      params:
        - name: pathfiles
          value: configs/backup/data
        - name: pathmanifest
          value: gitops/config/resources/evtmanager-objserv-agg-backup-config.yaml
        - name: yq-version
          value: 4.24.5
      runAfter:
        - git-clone-configs
        - git-clone-gitops
      taskRef:
        kind: Task
        name: merge-files-into-manifest
      workspaces:
        - name: inputoutput
          workspace: git
    - name: backup-validate-properties-file
      params:
        - name: SCRIPT
          value: |-
            #!/bin/bash
            while IFS= read -r line
            do
              echo "$line" | grep -q ":"  
              if [[ $? -eq 1 ]]
              then 
                echo "Missing colon on line \"$line\""
                exit 1
              fi
            done < "$(workspaces.manifest-dir.path)/merged/agg-b-props-append"
        - name: VERSION
          value: latest
      runAfter:
        - backup-merge-files-into-manifest
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: git
    - name: backup-oc-noi-sql-exec
      params:
        - name: SCRIPT
          value: >
            oc exec evtmanager-ncobackup-0 -c ncobackup-agg-b -- mkdir -p
            /home/netcool/tekton

            oc rsync -c ncobackup-agg-b --include=agg-b-sql-extensions
            --strategy=rsync $(workspaces.manifest-dir.path)/merged/
            evtmanager-ncobackup-0:/home/netcool/tekton

            oc exec evtmanager-ncobackup-0 -c ncobackup-agg-b -- bash -c
            '/opt/IBM/tivoli/netcool/omnibus/bin/nco_sql -server AGG_B -user
            root -password $OMNIBUS_ROOT_PWD <
            /home/netcool/tekton/agg-b-sql-extensions'
        - name: VERSION
          value: latest
      runAfter:
        - backup-merge-files-into-manifest
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: git
    - name: import-noi-runbooks
      runAfter:
        - git-clone-configs
      taskRef:
        kind: Task
        name: import-noi-runbooks
      params:
        - name: params
          value: '--publish'
        - name: runbookspath
          value: configs/runbooks
        - name: noi-secret
          value: runbook-pipeline-secret
      workspaces:
        - name: runbooks
          workspace: git
  workspaces:
    - name: git
    - name: basic-auth
